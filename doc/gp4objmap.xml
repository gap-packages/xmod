<!-- ------------------------------------------------------------------- -->
<!--                                                                     -->
<!--  gp4objmap.xml         XMod documentation            Chris Wensley  -->
<!--                                                                     -->
<!--  Copyright (C) 1996-2019, Chris Wensley et al,                      --> 
<!--  School of Computer Science, Bangor University, U.K.                --> 
<!--                                                                     -->
<!-- ------------------------------------------------------------------- -->

<?xml version="1.0" encoding="UTF-8"?>

<Chapter Label="chap-obj3">

<Heading>Crossed cubes and Cat<M>^3</M>-groups</Heading>

<Index>4d-group</Index>
<Index>4d-domain</Index>
The term <E>4d-group</E> refers to a set of equivalent categories 
of which the most common are the categories of 
<E>crossed cubes</E> and <E>cat<M>^3</M>-groups</E>. 
A <E>4d-mapping</E> is a function between two 4d-groups which preserves 
all the structure.
<P/>
The material in this chapter should be considered very experimental. 
As yet there are no functions for crossed cubes. 

<Section Label="sect-cat3-functions">
<Heading>Functions for (pre-)cat<M>^3</M>-groups</Heading>

We shall use the following standard orientation of a cat<M>^3</M>-group
<M>E</M> on a group <M>G</M>. 
<M>E</M> contains <M>8</M> groups; <M>12</M> cat<M>^1</M>-groups 
and <M>6</M> cat<M>^2</M>-groups forming the vertices; edges and faces 
of a cube, as shown in the following diagram. 
<Display>
<![CDATA[
\vcenter{\xymatrix{
 & H \ar[dddd] <+0.5ex> \ar[dddd] <+0.0ex>
     \ar[rrrr] <+0.5ex> \ar[rrrr] <+0.0ex>
     \ar[dr] <+0.6ex> 
   & & & & N \ar[llll] <+0.6ex> 
             \ar[dddd] <+0.6ex> \ar[dddd] <+0.0ex>
             \ar[dr] <+0.6ex> 
           & \\
 & & G \ar[dddd] <+0.5ex> \ar[dddd] <+0.0ex>
       \ar[rrrr] <+0.5ex> \ar[rrrr] <+0.0ex> 
       \ar[ul] <+0.5ex> \ar[ul] <+0.0ex> 
     & & & &  R \ar[llll] <+0.6ex> 
                \ar[dddd] <+0.5ex> \ar[dddd] <+0.0ex> 
                \ar[ul] <+0.5ex> \ar[ul] <+0.0ex>    \\
 & & & & & & \\
 & & & & & & \\
 & M \ar[uuuu] <+0.6ex> 
     \ar[rrrr] <+0.5ex> \ar[rrrr] <+0.0ex> 
     \ar[dr] <+0.6ex>  
   & & & & L \ar[uuuu] <+0.6ex> 
             \ar[llll] <+0.6ex>
             \ar[dr] <+0.6ex>  
           & \\ 
 & & Q \ar[uuuu] <+0.6ex> 
       \ar[rrrr] <+0.5ex> \ar[rrrr] <+0.0ex> 
       \ar[ul] <+0.5ex> \ar[ul] <+0.0ex>  
     & & & & P \ar[uuuu] <+0.6ex>
               \ar[llll] <+0.6ex>  
               \ar[ul] <+0.5ex> \ar[ul] <+0.0ex>  \\ 
}}
]]>
</Display>
<P/>
By definition, <M>E</M> is generated by three commuting cat<M>^1</M>-groups 
<M>(G \Rightarrow R), (G \Rightarrow Q)</M> and <M>(G \Rightarrow H)</M>, 
but it is more convenient to think of <M>E</M> as generated by 
two cat<M>^2</M>-groups 
<List>
<Item>
<E>front</E><M>(E)</M>, generated by <M>(G \Rightarrow R)</M>
and <M>(G \Rightarrow Q)</M>; 
</Item>
<Item>
<E>up</E><M>(E)</M>, generated by <M>(G \Rightarrow H)</M>
and <M>(G \Rightarrow R)</M>. 
</Item>
</List> 
Because the tail, head and embedding maps all commute, 
it follows that <E>left</E><M>(E)</M>, 
generated by <M>(G \Rightarrow Q)</M> and <M>(G \Rightarrow H)</M>, 
is a third cat<M>^2</M>-group. 
The three remaining faces (cat<M>^2</M>-groups) 
<E>right</E><M>(E)</M>, <E>down</E><M>(E)</M> and <E>back</E><M>(E)</M> 
are then easily constructed. 
We shall always use the order [<E>front,up,left,right,down,back</E>] 
for the six faces. 
<P/>

<ManSection Label="cat3-group">
   <Func Name="Cat3Group"
         Arg="args" />
   <Func Name="PreCat3Group"
         Arg="args" />
   <Prop Name="IsCat3Group"
         Arg="C" />
   <Oper Name="PreCat3GroupByPreCat2Groups"
         Arg="L" />
<Description>
The global functions <C>Cat3Group</C> and <C>PreCat3Group</C> 
are normally take as arguments a pair of cat<M>^2</M>-groups 
or a trio of cat<M>^1</M>-groups. 
In subsection <Ref Oper="AllCat2GroupsIterator"/> the list of pairs 
<C>CatnGroupLists(d12).pairs</C> contains the three entries 
<C>[6,8],[6,11]</C> and <C>[8,11]</C>. 
It follows that the sixth, eighth and eleventh cat<M>^1</M>-groups 
for <C>d12</C> generate a cat<M>^3</M>-group. 
</Description>
</ManSection>
<P/>
<Example>
<![CDATA[
gap> all1 := AllCat1Groups( d12 );; 
gap> C68 := Cat2Group( all1[6], all1[8] );; 
gap> C116 := Cat2Group( all1[11], all1[6] );;
gap> C3Ga := Cat3Group( C68, C116 );
cat3-group with generating (pre-)cat1-groups:
1 : [d12 => Group( [ (), (1,6)(2,5)(3,4) ] )]
2 : [d12 => Group( [ (1,4)(2,5)(3,6), (1,3)(4,6) ] )]
3 : [d12 => Group( [ (1,5,3)(2,6,4), (1,4)(2,3)(5,6) ] )]
gap> C3Gb := Cat3Group( all1[6], all1[8], all1[11] );
cat3-group with generating (pre-)cat1-groups:
1 : [d12 => Group( [ (), (1,6)(2,5)(3,4) ] )]
2 : [d12 => Group( [ (1,4)(2,5)(3,6), (1,3)(4,6) ] )]
3 : [d12 => Group( [ (1,5,3)(2,6,4), (1,4)(2,3)(5,6) ] )]
gap> C3Ga = C3Gb;
true
]]>
</Example>

<ManSection>
   <Attr Name="Front3DimensionalGroup"
         Arg="C3" />
   <Attr Name="Up3DimensionalGroup"
         Arg="C3" />
   <Attr Name="Left3DimensionalGroup"
         Arg="C3" />
   <Attr Name="Right3DimensionalGroup"
         Arg="C3" />
   <Attr Name="Down3DimensionalGroup"
         Arg="C3" />
   <Attr Name="Back3DimensionalGroup"
         Arg="C3" />
<Description> 
The six faces of a cat<M>^3</M>-group are stored as these attributes. 
</Description>
</ManSection>
<P/>
<Example>
<![CDATA[
gap> C811 := Cat2Group( all1[8], all1[11] );;
gap> Left3DimensionalGroup( C3Ga ) = C811;
true
]]>
</Example>

</Section>

</Chapter>
